name: GUI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  gui-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libxcb-render0-dev \
          libxcb-shape0-dev \
          libxcb-xfixes0-dev \
          libxkbcommon-dev \
          libgtk-3-dev \
          libegl1-mesa-dev \
          libgl1-mesa-dev \
          xvfb

    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        components: rustfmt, clippy

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build project
      run: cargo build --release

    - name: Run GUI tests with Xvfb
      run: |
        # Start Xvfb for headless GUI testing
        Xvfb :99 -screen 0 1024x768x24 &
        export DISPLAY=:99

        # Wait for Xvfb to start
        sleep 2

        # Run GUI tests
        cargo test --test gui -- --nocapture

    - name: Run component tests
      run: |
        export DISPLAY=:99
        cargo test tests::gui::components -- --nocapture

    - name: Run integration tests
      run: |
        export DISPLAY=:99
        cargo test tests::gui::integration -- --nocapture

    - name: Run visual regression tests
      run: |
        export DISPLAY=:99
        cargo test tests::gui::visual -- --nocapture

    - name: Upload test snapshots
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: gui-test-snapshots
        path: |
          target/egui_kittest_snapshots/
          test_output/
        retention-days: 30

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: gui-test-results
        path: |
          test_results.log
          gui_test_results.log
        retention-days: 30

  gui-tests-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        components: rustfmt, clippy

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build project
      run: cargo build --release

    - name: Run GUI tests (macOS)
      run: cargo test --test gui -- --nocapture

  gui-tests-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        components: rustfmt, clippy

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build project
      run: cargo build --release

    - name: Run GUI tests (Windows)
      run: cargo test --test gui -- --nocapture